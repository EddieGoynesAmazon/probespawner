{
    "input": ["JMXInput"],
    
    "JMXInput": {
       "description": "Obtains JMX metrics from JVM instance, stores on RabbitMQ",
       "probemodule": { "module": "jmxprobe", "name" : "JMXProbe" },
       "output": ["RabbitMQOutput"],
       "interval": 10,
       "alias": "my.metric.prefix",
       "queries" : [
         {
           "object_name" : "java.lang:type=Memory"
         }, {
           "object_name" : "java.lang:type=Runtime",
           "attributes" : [ "Uptime", "StartTime" ],
           "object_alias" : "Runtime"
         }, {
           "object_name" : "java.lang:type=GarbageCollector,name=*",
           "attributes" : [ "CollectionCount", "CollectionTime" ],
           "object_alias" : "${type}.${name}"
         }, {
           "object_name" : "java.nio:type=BufferPool,name=*",
           "object_alias" : "${type}.${name}"
         },
         {
           "object_name" : "com.bea:Type=ServerRuntime/ThreadPoolRuntime",
           "object_value_to_jmxquery": true
         }
       ],
       "metrics": [
         "java.lang:type=Memory/HeapMemoryUsage",
         "java.lang:type=Runtime/Uptime"
       ],
       "operations": [
         { "name": "java.lang:type=Threading/dumpAllThreads", "params": [ true, true ], "signatures": [ "boolean", "boolean" ] },
         { "name": "java.lang:type=Threading/findMonitorDeadlockedThreads" },
         { "name": "java.lang:type=Threading/findDeadlockedThreads" }
       ],
       "host":"suchhost",
       "port":9010,
       "maxCycles": 5000,
       "arrayElementsToRecord": true
    },
    "RabbitMQOutput": {
        "class": "rabbitmq",
        "outputmodule": { "module": "rmqlh", "name" : "RabbitMQ" },
        "codec":"json_lines",
        "addresses": ["suchhost:5672", "suchhost:5672"],
        "queue_name": "JAVAstuffQueue",
        "host": "suchhost",
        "virtualhost": "/",
        "username": "myuser",
        "password": "mypassword",
        "port": 5672,
        "networkRecoveryInterval": 10000,
        "automaticRecoveryEnabled": false,
        "topologyRecoveryEnabled": false
    }
}